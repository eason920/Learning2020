-var status = 'dev'
doctype html
html(lang='zh')
	head
		meta(charset='utf-8')
		meta(name='viewport', content='width=device-width, initial-scale=1.0')
		meta(name='description', content='title here')
		meta(property='og:title', content='title here')
		meta(property='og:url', content='url here')
		meta(property='og:image', content='location href hrer')
		meta(property='og:description', content='content here')
		link(rel='icon', href='./images/favicon.ico', type='image/ico')
		title FUNDAY
		link(href='css/bootstrap.min.css', rel='stylesheet', type='text/css')
		link(rel="stylesheet", href="css/all.css")
		link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Playfair+Display&display=swap')
		link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Abril+Fatface&display=swap')
		link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Engagement&display=swap")
		link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Roboto+Mono&display=swap")
		//- link(rel="stylesheet", href="css/print.css")
		script(src='js/jquery-1.11.1.min.js')
		script.
			// art video v
			let videoId = 'h1I5JM16N0c';

			// teach lightbox video v
			const lbUrl1 = 'https://www.youtube.com/embed/h1I5JM16N0c';
			const lbUrl2 = 'https://www.youtube.com/embed/hN09_3jfNFE';
			const lbUrl3 = 'https://www.youtube.com/embed/RPBLbKwRAkw';
			
			// read lightbox status v
			let read1 = true;
			let read2 = false;
			let read3 = false;

			// memobox v
			//- let memoJSON = JSON.parse('[{"id":"memo1","text":"msg 1","top":"2200","left":"0"},{"id":"memo2","text":"msg 2","top":"500","left":"300"}]');
			let memoJSON = JSON.parse('[{"id":"memo1","text":"msg%201%0Afloor2%0Afloor3%0AASDFIASJEFIASE%0A","basicid2":"Nct1-5","basicid1":"ct1-5"},{"id":"memo2","text":"%u4FBF%u5229%u8CBC%u6210%u529F%0Aya%7E%7E","basicid2":"Nt5-6","basicid1":"t5-6"}]');
			let memoUpdate = '';

			// content v
			for(let i = 1; i<=3; i++){
				$.get('step' + i + '.html', function(html){
					$('#stepBlock' + i ).html(html);
				});
			};
		script(src='js/ui_all.js')
		script(src='js/memobox.js')
		script(src='js/ui_step1.js')
		script(src='js/ui_step2.js')
		script(src='js/ui_step3.js')
		script(src="Dr.eye/Dre.js")
	body
		// v HTML START v
		#stepBox.is-step1
			.topbar
				.wrapper
					.wrapper-left
						a.topbar-back-btn(href='#')
							.icon-arrowleft
							|返回
					.wrapper-right-f1
						.wrapper-right-f2
							ul.topbar-step
								li.topbar-step-item.is-step-switch1
									.topbar-num 1
									.topbar-text 研讀本文
									.icon-correct
								li.topbar-step-item.is-step-switch2
									.topbar-num 2
									.topbar-text 加強記憶
									.icon-correct
								li.topbar-step-item.is-step-switch3.is-open
									.topbar-num 3
									.topbar-text 學習驗收
									.icon-pink
									.topbar-scort-outer
										ul.topbar-scort
											li.topbar-scrot-item.is-ex1
												//- .topbar-num A
												.topbar-box-l
													.topbar-text 理解力測驗
													.topbar-s 
														|100
														span 分
												.topbar-box-r
													.icon-correct
											li.topbar-scrot-item.is-ex2
												//- .topbar-num(style='margin-left: -22px') B
												.topbar-box-l
													.topbar-text 聽力測驗
													.topbar-s 
														// |89
														// span 分
												.topbar-box-r
													// .icon-correct
											li.topbar-scrot-item.is-ex3
												//- .topbar-num C
												.topbar-box-l
													.topbar-text 克漏字測驗
													.topbar-s 
														|77
														span 分
												.topbar-box-r
													.icon-correct
									.icon-correct
							.topbar-icon
								a.topbar-icon-item(href='#')
									.icon-refresh
								a.topbar-icon-item(href='#')
									.icon-print
								a.topbar-icon-item(href='#')
									.icon-star-big
			.main
				.article_mask
					section
						aside
							.aside-above
								.aside-above-main
									.title#title-a 
										if (status === 'dev')
											|Amazon Rainforest on Fire
										else
											|<%=en_subject%>
									.sub#subtitle-a 
										if (status === 'dev')
											|亞馬遜雨林大火
										else
											|<%=ch_subject%>
								.aside-above-sub
									.aside-above-sub-en Powerful winds blew the smoke to the city and darkened the sky.
									.aside-above-sub-ch 強風將濃煙帶到城市，使天空變黑。
									.aside-speedbox.is-play1
										.speed-point
										.speed
											b.speed-left 慢
											input#Speed_range(type='range', min='0.5', max='1.5', value='1', step='0.25')
											b 快
										input#playBtn1.play_btn.icon-play(type='button')
									.aside-speedbox.is-play2
										.speed-point
										.speed
											b.speed-left 慢
											input(type='range', min='0.5', max='1.5', value='1', step='0.25')
											b 快
										input#playBtn2.play_btn.icon-play(type='button')
									.aside-speedbox.is-play3
										.speed-point
										.speed
											b.speed-left 慢
											input(type='range', min='0.5', max='1.5', value='1', step='0.25')
											b 快
										input#playBtn3.play_btn.icon-play(type='button')
							.aside-below
								.ArticleInfo-box
									.ArticleInfo1.type2
										.classification_btn
											span#class_f 
												if (status === 'dev')
													|生活｜Culture/文化 CEFR:C1
												else
											.classification
												ul
													li 專業通則
													li 生活
													li 社交
													li 通識
													li 自我意識
													li 基礎養成
									.ArticleInfo2 
										if (status === 'dev')
											|文章序號:17976 Date:2019/05/16
										else
								.article-vbox
									.Article_pic
										img(src='./images/galxy.jpg')
									// img ^v video box
									#y-box.is-first-start
									img.y-start(src='images/y_start.png')
									.y-small
						article
							#stepBlockOuter
								#stepBlockBox
									#stepBlock1
									#stepBlock2
									#stepBlock3
								
					.tranglationBody
						input.close_btn(type='button')
						.translation_Font
						.translation_list
							if (status === 'dev')
								include partials/text_phrase
							else
						.translation_list2
							if(status === 'dev')
								include partials/text_collection
								include partials/text_collection
								include partials/text_collection
								include partials/text_collection
							else
								include partials/text_collection
			.funbar-box
				.wrapper
					.wrapper-left
					.wrapper-right-f1
						.wrapper-right-f2
							ul.funbar.step-fnbar1
								li.funbar-item.active.is-item-language
									.controlbox
										b.controlbox-item 中+EN
										i.controlbox-item EN
								li.funbar-item.is-item-read.active(data-value='1')
									.controlbox
										b.controlbox-item 老師講解
										i.controlbox-item 英文朗讀
								li.funbar-item.is-item-arttype
									a.funbar-btn(href='#') 原文分析
									ul.typebox
										li.typebox-item.active(data-arttype='muted') 長句分解
										li.typebox-item(data-arttype='strong') 加強描述
										li.typebox-item(data-arttype='title') 加強主題
								li.funbar-item.is-item-memo
									a.funbar-btn.funbar-memobox.do-insert-id(href='#') 便利貼
								li.funbar-item.is-item-group
									a.funbar-btn.funbar-phrase(href='#') 單字片語
								li.funbar-item
									a.funbar-btn.funbar-collection(href='#') 單字收錄
							ul.funbar.step-fnbar2
								li.funbar-item
									.controlbox2.is-play-part
										.controlbox2-on on
										.controlbox2-off off
										.controlbox2-text 全文錄音播放
								li.funbar-item
									.controlbox2.is-play-repeat
										.controlbox2-on on
										.controlbox2-off off
										.controlbox2-text 錄音重複
			a.icon-how(href='#')
				.icon-bulb
				.icon-how-text Tips
		//- include partials/lb
		//.lb-mask-final
		//.lb.is-lb-final
			.lb-box
				img.lb-final-img(src='./images/congrats.png')
				h2.lb-final-title 表現真的太棒！建議一週至少要完成三到七篇文章的學習驗收，才能大幅提升自己的英文實力。
				.lb-final-box
					a.lb-final-item(href='#', style='background-image: url(./images/galxy.jpg)')
						.lb-final-text 觀看成效
					a.lb-final-item(href='#', style='background-image: url(./images/galxy.jpg)')
						.lb-final-text 學下一篇
						.lb-final-art 特斯拉駕駛落橋身亡特斯拉駕駛落橋身亡

		script.
			// skin ( 必需寫在下方 ) v
			let template;
			const skinSource = new Date().getTime()%2;
			//- template = 'skin1'
			skinSource === 0 ? template = 'skin1' : template = 'skin2';
			$('#stepBox').addClass(template);
			$('.is-lb-final').addClass(template);
		// ^ HTML END ^

//- NEW STUDY ####################################
//- pug 的 if / else , 「要有 else」才能逹成非 dev 者為空值目的
//- if 跟 () 不用空隔隔開，只顯顥示 height light 有空隔才上色
//- sass 的 extend 視作一 selector (有屬性&值)
//- sass 的 extend 引用要有 @extend
//- $('textarea').html('floor1\r\nfloor2'); 
//-	1.用 html()
//-	2.用 \n 或 \r 任一(或兩者一起用)
//- 可產出 textarea 中文字換行結果
//- input(type='range')::-webkit-slider-thumb 編輯圓點 style
//- pointer-events: none; 讓滑鼠可以點擊穿透偽元素，不然會點不到下面
//- nua mac => /macintosh/i.test(nua)
//- ################################################
//- 正規表逹式：
//-   1. // 中「()」表示群組起來規則內string，在 replace 時可給方法的後欄「慾改作區」以「$1」引用
//-   2-1. // 中「[]」為設定一起頭字元(包含它)，開始向順向(右)取碼
//-   2-2. // 「[]」中有「^」時，即取到該字元「之前」，即不包含該字
//-   2-3 「*」為「[]」的形容詞，使取值方向成為「反序」 
//-   2-4. 故 2-1~3 即生成以「第一組[]為起頭」至「第二組「[]」為結尾」為區間，取出 string 的功能
//-   3. 特殊符號要在字元左方加反鈄線「\」
//-   5. // 之後方的 g ，如同 jq 的 each 方法，作用於所有「有//正規式中規則(2-1~4)」的string 多次
//- 冒泡 e.stopPropagation()
//- rem 根劇 selector 下在 html
//- $('here').find('here') => 兩 here 中有多個 selector，都用「逗號」分隔
//- 承上，只有預先綁定中，多個 selector 用「空白」來分隔
//- ##############################################
//- str.toUpperCase()：將字符串str中的字符都轉換為大寫。
//- str.toLowerCase()：將字符串str中的字符都轉換為小寫。
//- ##############################################
//- rem 確實是有幫助的，請延用，並在 padding & margin 上也使用
//- 並在 line-height 保持用倍數

//-#######################################################
//- selector.attr('data-name') 取的值是「真正的」在 dev toor 上所見數據
//- selector.data('name') 則取值不是更新的，而是尚未變更的數據
//- 以上同 f2n 課程中某堂中有遇過
//- 給值時，用 selector.attr('data-name', '新的值')，而沒有「select.data('name', '新的值') 是相同道理
//-#######################################################

//- input.attr('value', text)
//- div.text(text)
//- input.val() 取得修改「後」的 value 屬性值
//- focus input 時 keydown enter 事件?

//- NEW STUDY ####################################
//- 在正則表達式中，使用變數 => /string/g 改以 「new RegExp('string', 'g')」定義之
//- ##############################################

//- 「二元一次方程式」只要一個結果寫法 => 「 if fu ? true : null 」，用 null 即可結束之

//- string.substr(起始包函字字序, 開始取 n 個)
//- 開始取 n 個不寫就往右全取

//- hover 方法不能用「預先綁定」，要分成 mouseover、mouserout 兩次執行

//- 週遊 .next() 取比鄰下一個 element

//- .blur 行為事件 => 失焦

//- NEW STUDY ####################################
//- STRING TO OBJECT TO TEXTAREA
//- 0. textarea 預設有字的視覺，在 html 中是 <ta>文字</ta>，不是 ta(val='文字')
//- 	textarea 不是 self-close 元素

//- A. textarea 給入換行的方法為
//- 	1. str = 'aa\nbb\ncc'; => 換行為「\n」寫在 string 中
//- 	2. textarea.html(str) 

//- B. ary 中的值可以直接寫入「\n」，可以 textarea.html( ary[0].text ) 在 textarea 中正確取得換行結果，如
//- 	1. ary = [ {text: 'aa\nbb\ncc'}, {text: '11\n22\n33'}]
//- 	2. textarea.html( ary[0].text )

//- C. sting 經過 JSON.parse() 會除去「\n」使引用在 textarea 時不會換行
//- 	1. 先將 str 中的「\n」.replace 作「\\n」，多一個「\」就可讓 json.parse 轉型成功
//- 	2. replace 寫法如右：aryStr.replace(/\n/g, '\\n'); 左正規為的是抓出「所有」目標，右為結果「字串」，當然是用引號包，不再是正規式 RegExp

//- ＊＊>> 要 JSON.parse(str) 的 str ，必定連 key 都要加好引號 <<＊＊

//- ================================================
//- TEXTAREA TO STRING
//- 1. textarea 用 .text() 或 .html() 或 .val 都會取出一樣的值，但可能用 .val() 比較合適，或說 .text() 取出的結果一樣是很怪的事情
//- 2. 承上取出的值，若 textarea 有換行會看到值也是換好行的
//- 3. 承上，看不到的是換行者其實在尾巴有「\n」字串是看不到的
//- 4. 承上，「\n」看不到，卻可以 replace !!!!
//- check 「f2e2 / 0a-26_textarea_vs_JSONparse_n」

//- ================================================
//- STRING TO OBJECT TO TEXTAREA 2
//- 若源 string 記載作有 escape(string) 格式
//- 當引用 escape string 前必定要做的 unescape( string ) 就會自動做掉 replace(/\n/g, '\\n') 的動作
//- => 用 escape 根本不需要處理 \n 換行字元問題了

//- ##############################################

//- es6 解析 fn(val1,val2){} 中的帶值「 val1、val2 」是以「let」定義的
//- ==> 帶值可以再加工


//- asp 拆檔用 .get() 方式讀入，檔名要
//- (O)寫作 .get('partials「.html」') ，內容仍有 asp 語法可以  << 仍可正常運作
//- (X)寫作 .get("partials「.asp」 ") 無法作用
//- >> 應是用 asp 語法直接嵌人，非 jq .get <<< 留給 kai 改

//- ＊＊>> 使用 .get 讀入html 片段，基本不用特別用 iframe 呼叫六父層方式去對待( .parent.fn() )
//- ＊＊>> 但要強烈分清楚「原本就存在 html 中」或「js 非同步加載」，後者要用 .find 或預先戴入

//- ipt(tp='checkbox' id='aa') 
//- lab(for='aa')
//- label 的 for，input 用 id 接


//- 預先綁定只有「己知己存在元素」+「on」方法，不可用週遊取代
//- $('body').find('.cover-btn').click(function(){  (X)
//- ^ 不等於 v
//- $('body').on('click', '.cover-btn', function(){ (O)


//- 以 js 非同步後加載元素
//- A.若是開始的 default view 要用 setInterval + html().test('element name')
//- 之後再操作新增元素
//- ======================================================
//- B.若是行為事件，用預先綁定就可以操作
//- 無需 setInterval 或 sitTimeout


//- RADIO
//- vvvvv
//- type css => -webkit-appearance: radio
//- input#aa
//- label(for='aa')
//- ^^^^^^
//- 'input.id' fro 'label.for'
//- 'name' for 'more radio chose 1'
//- 'checked' for checked

//- ==============
//- -webkit-appearance: radio

//- ================
//- split() => string.split('切開跟據字元') => 切開字元，可用作將字串切成一ary用
//- splice(值在ayr中的順序位置,刪除個數,取代值) => target 必是 ary
//- supbtr(開切點序號,起算取幾個字元) => 用在 string

//- *************************
//- print 方法在 ui_all.js 中的「printScreen」函式中

//- pug mixin & each
//- 1. gulpfiel.js v
//- 	.pipe($.data(function(){
//- 		var MYDATA = require('./WHERE.json'),
//- 			source = {'MYDATA': MYDATA} <==> {MADATA}
//- 		return source;
//- 	}))
//-
//- 2. pug v
//- mixin MNAME(V1, V2, V3)
//- 	.structure #{V1}
//- 		.structure #{V2}
//- 			.structure(class=V3)  << dont need 「#{}」 & 「''」
//-
//- 3. pug v
//- each ENAME in MYDATA.OBJNAME
//- 	+MNAME(ENAME.KEY1, ENAME.KEY2, ENAME.KEY3)

//- .off('.eventName') , eventName 要有「.」

//- 等間距字型「monospace, Courier New」: 胖字a到瘦字i，寬度相同

//- html tag property 「contenteditable="true"」
//- ==> 使所有ele如「div、span、p」等，都如同 input ele 般可kye字